#pragma checksum "D:\Source\AuxiliarC_V3_Alpha\Beehouse.Essentials.Web.Components\Form\RazorInput.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5a4ac839b37520c265bc52f4cec00892367d251e"
// <auto-generated/>
#pragma warning disable 1591
namespace Beehouse.Essentials.Web.Components.Form
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using Microsoft.AspNetCore.Components.Forms;
    using Beehouse.Essentials.Web.Components.Common;
    using System.Linq.Expressions;
    public class RazorInput : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.OpenElement(0, "div");
            builder.AddAttribute(1, "class", "form-group" + " " + (Classes));
            builder.AddMarkupContent(2, "\r\n    ");
            builder.OpenElement(3, "label");
            builder.AddAttribute(4, "class", "col-form-label");
            builder.AddContent(5, Label);
            builder.CloseElement();
            builder.AddMarkupContent(6, "\r\n");
#line 9 "D:\Source\AuxiliarC_V3_Alpha\Beehouse.Essentials.Web.Components\Form\RazorInput.razor"
     if (Type == RazorInputType.Text)
    {

#line default
#line hidden
            builder.AddContent(7, "        ");
            builder.OpenComponent<Microsoft.AspNetCore.Components.Forms.InputText>(8);
            builder.AddAttribute(9, "Class", "form-control");
            builder.AddAttribute(10, "Value", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.String>(Value));
            builder.AddAttribute(11, "ValueChanged", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, ValueChanged)));
            builder.AddAttribute(12, "ValueExpression", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<System.String>>>(ValueExpression));
            builder.CloseComponent();
            builder.AddMarkupContent(13, "\r\n");
#line 12 "D:\Source\AuxiliarC_V3_Alpha\Beehouse.Essentials.Web.Components\Form\RazorInput.razor"
    }
    else if (Type == RazorInputType.Price)
    {

#line default
#line hidden
            builder.AddContent(14, "        ");
            builder.OpenElement(15, "div");
            builder.AddAttribute(16, "class", "input-group");
            builder.AddMarkupContent(17, "\r\n            ");
            builder.AddMarkupContent(18, "<div class=\"input-group-prepend\"><div class=\"input-group-text\">R$</div></div>\r\n            ");
            builder.OpenComponent<Microsoft.AspNetCore.Components.Forms.InputText>(19);
            builder.AddAttribute(20, "Class", "form-control price");
            builder.AddAttribute(21, "Value", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.String>(Value));
            builder.AddAttribute(22, "ValueChanged", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, ValueChanged)));
            builder.AddAttribute(23, "ValueExpression", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<System.String>>>(ValueExpression));
            builder.CloseComponent();
            builder.AddMarkupContent(24, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(25, "\r\n");
#line 19 "D:\Source\AuxiliarC_V3_Alpha\Beehouse.Essentials.Web.Components\Form\RazorInput.razor"
    }

#line default
#line hidden
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 22 "D:\Source\AuxiliarC_V3_Alpha\Beehouse.Essentials.Web.Components\Form\RazorInput.razor"
           
    [Parameter] string Label { get; set; }
    [Parameter] string Value { get; set; }
    [Parameter] string Classes { get; set; }
    [Parameter] EventCallback<string> ValueChanged { get; set; }
    [Parameter] Expression<Func<string>> ValueExpression { get; set; }
    [Parameter] RazorInputType Type { get; set; }

    protected override void OnInit()
    {
        if (Type == RazorInputType.Price)
        {
            JSInteropManager.AddFunction("ApplyMask");
        }
        base.OnInit();
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Beehouse.Essentials.Web.Js.IJSInteropManager JSInteropManager { get; set; }
    }
}
#pragma warning restore 1591
